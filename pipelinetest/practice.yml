trigger:
- development

pool:
  name: default
  

stages:
- stage: build  

  jobs:
  - job: job1
    steps:
    - checkout: self
      lfs: true
      persistCredentials: true

    # - checkout: MyDevops1  

    - task: powershell@2
      inputs: 
        targetType: 'inline'
        script: |
          Write-Host "Hi siddharth"

- stage: build2 
  jobs:
  - job: job2
    steps:
    - checkout: self
      lfs: true
      persistCredentials: true

    # - checkout: MyDevops1  
    - task: powershell@2
      inputs: 
        targetType: filepath
        filepath: 'D:\PRACTICE-Pipeline\MyDevops1\pipelinetest\practice.ps1'
        errorActionPreference: continue

    # - powershell: | 
        
        # $x = 30

        # if($x -eq 10){
        #   write-host("Value of X is 10")
        # } elseif($x -eq 20){
        #   write-host("Value of X is 20")
        # } elseif($x -eq 30){
        #   write-host("Value of X is 30")
        # } else {
        #   write-host("This is else statement")
        # }       

    - task: powershell@2
      inputs: 
      targetType: inline
      script: |
        $url = "https://dev.azure.com/{organization}/{project}/_apis/build/builds?definations={definationsID}&api-version=6.0"
        $connectionToken="Your PAT Here"
        $base64AuthInfo= [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":$($connectionToken)"))

          $buildPipeline= Invoke-RestMethod -Uri $url -Headers @{authorisation = "Basic $base64AuthInfo"} -Method Get

          $BuildStatus= $buildPipeline.value.status | Select-Object -first 1

          Write-Host this is Build Status: $BuildStatus
